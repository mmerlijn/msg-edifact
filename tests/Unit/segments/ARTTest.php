<?php

namespace mmerlijn\msgEdifact\tests\Unit\segments;

use mmerlijn\msgEdifact\Edifact;
use mmerlijn\msgRepo\Address;
use mmerlijn\msgRepo\Msg;
use mmerlijn\msgRepo\Phone;

class ARTTest extends \mmerlijn\msgEdifact\tests\TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->edifact = new Edifact("ART+H+0123456+M.C. Hart+Street:2::Amsterdam:1000AA+0123456789'");

    }

    public function test_requester_setter()
    {
        $msg = new Msg();
        $edifact = new Edifact();

        $msg->order->requester->agbcode = "0123456";
        $msg->order->requester->name->name = "M.T. Jobs";
        $msg->order->requester->setAddress(new Address(street: "Street", building: "5", city: "Amsterdam", postcode: "1000BB"));
        $msg->order->requester->setPhone("0623456789");
        $edifact->setMsg($msg);
        $this->assertStringContainsString("ART+H+0123456+M.T. Jobs+Street:5::Amsterdam:1000BB+06 2345 6789'", $edifact->write());
    }

    public function test_requester_getter()
    {
        $msg = $this->edifact->getMsg(new Msg());
        $array = $msg->toArray();
        $this->assertSame("0123456", $msg->order->requester->agbcode);
        $this->assertSame("M.C. Hart", $msg->order->requester->name->name);
        $this->assertSame("Street", $msg->order->requester->address->street);
        $this->assertSame("2", $msg->order->requester->address->building);
        $this->assertSame("Amsterdam", $msg->order->requester->address->city);
        $this->assertSame("1000AA", $msg->order->requester->address->postcode);
        $this->assertSame("012 3456 789", (string)$msg->order->requester->phone);

    }

    public function test_validator()
    {
        $this->expectException(\Exception::class);
        $this->expectExceptionMessageMatches('/requester_agbcode required/');
        $this->expectExceptionMessageMatches('/requester_name required/');
        $edifact = (new Edifact())->setMsg(new Msg());
        $edifact->write(true);
    }
}