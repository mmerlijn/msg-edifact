<?php

namespace mmerlijn\msgEdifact\tests\Unit\segments;

use mmerlijn\msgEdifact\Edifact;
use mmerlijn\msgRepo\Msg;

class IDETest extends \mmerlijn\msgEdifact\tests\TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->edifact = new Edifact("IDE:1+N+123456+'");

    }

    public function test_code_completion_setter()
    {
        $msg = new Msg();
        $edifact = new Edifact();
        $msg->order->complete = false;
        $edifact->setMsg($msg);
        $this->assertStringContainsString('IDE:1+N', $edifact->write());
    }

    public function test_code_completion_getter()
    {
        $msg = $this->edifact->getMsg(new Msg());
        $array = $msg->toArray();
        $this->assertSame(false, $msg->order->complete);
        $this->assertSame(false, $array['order']['complete']);
    }

    public function test_lab_nr_setter()
    {
        $msg = new Msg();
        $edifact = new Edifact();

        $msg->order->complete = false;
        $msg->order->lab_nr = "112233";
        $edifact->setMsg($msg);
        $this->assertStringContainsString('IDE:1+N+112233', $edifact->write());
    }

    public function test_lab_nr_getter()
    {
        $msg = $this->edifact->getMsg(new Msg());
        $array = $msg->toArray();
        $this->assertSame("123456", $msg->order->lab_nr);
        $this->assertSame("123456", $array['order']['lab_nr']);
    }

    public function test_validator()
    {
        $this->expectException(\Exception::class);
        $this->expectExceptionMessageMatches('/lab_nr required/');
        $edifact = (new Edifact())->setMsg(new Msg());
        $edifact->write(true);
    }
}