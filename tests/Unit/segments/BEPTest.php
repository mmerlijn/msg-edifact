<?php

namespace mmerlijn\msgEdifact\tests\Unit\segments;

use mmerlijn\msgEdifact\Edifact;
use mmerlijn\msgEdifact\tests\TestCase;
use mmerlijn\msgRepo\Msg;
use mmerlijn\msgRepo\OrderItem;
use mmerlijn\msgRepo\Result;

class BEPTest extends TestCase
{
    public $edifact;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->edifact = new Edifact("BEP:1:1:5+0+Ht+0.40++l/l++0.35+0.50+HT  B'
BEP:1:1:6+0+Erythrocyten+4.4++10E12/l++3.8+5.6+ERY B MT'");
    }

    public function test_order_getter()
    {
        $msg = $this->edifact->getMsg(new Msg());
        $array = $msg->toArray();
        $this->assertSame('0.40', $msg->order->results[0]->value);
        $this->assertSame('Ht', $msg->order->results[0]->test_name);
        $this->assertSame('l/l', $msg->order->results[0]->units);
        $this->assertSame('0.35-0.50', $msg->order->results[0]->references_range);
        $this->assertSame('HT  B', $msg->order->results[0]->test_code);
        $this->assertSame('0.40', $array['order']['results'][0]['value']);
    }

    public function test_order_and_comment_setter()
    {
        $msg = new Msg();
        $msg->order->addResult(new Result(value: 10, references_range: "4-20", test_code: "AB  34 D", test_name: "ABCD", comments: ["today", "tomorrow", "yesterday"], units: "mmol"));
        $file = (new Edifact())->setMsg($msg)->write();
        $this->assertStringContainsString("OPB:1:1:1:1+today", $file);
        $this->assertStringContainsString("OPB:1:1:1:2+tomorrow", $file);
        $this->assertStringContainsString("OPB:1:1:1:3+yesterday", $file);
        $this->assertStringContainsString("BEP:1:1:1+0+ABCD+10++mmol++4+20+AB  34 D", $file);

    }

    public function test_abnormal_flag_setter()
    {
        $msg = new Msg();
        $msg->order->addResult(new Result(value: 10, abnormal_flag: "H", test_name: "ABCD"));
        $msg->order->addResult(new Result(value: 4, abnormal_flag: "L", test_name: "DCBA"));
        $file = (new Edifact())->setMsg($msg)->write();
        $this->assertStringContainsString("BEP:1:1:1+0+ABCD+10+++>", $file);
        $this->assertStringContainsString("BEP:1:1:2+0+DCBA+4+++<", $file);
    }
}