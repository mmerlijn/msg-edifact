<?php

namespace mmerlijn\msgEdifact\tests\Unit\segments;

use mmerlijn\msgEdifact\Edifact;
use mmerlijn\msgRepo\Msg;
use mmerlijn\msgRepo\Phone;

class ARATest extends \mmerlijn\msgEdifact\tests\TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->edifact = new Edifact("ARA:1+John Doe+0223344555'");

    }

    public function test_department_setter()
    {
        $msg = new Msg();
        $edifact = new Edifact();

        $msg->sender->name->name = "Big Doe";
        $msg->sender->setPhone(new Phone("0123456789"));
        $edifact->setMsg($msg);
        $this->assertStringContainsString("ARA:1+Big Doe+012 3456 789'", $edifact->write());
    }

    public function test_department_getter()
    {
        $msg = $this->edifact->getMsg(new Msg());
        $array = $msg->toArray();
        $this->assertSame("John Doe", $msg->sender->name->name);
        $this->assertSame("0223 344 555", (string)$msg->sender->phone);

    }

    public function test_validator()
    {
        $this->expectException(\Exception::class);
        $this->expectExceptionMessageMatches('/sender_name required/');
        $edifact = (new Edifact())->setMsg(new Msg());
        $edifact->write(true);
    }
}