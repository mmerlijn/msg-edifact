<?php

namespace mmerlijn\msgEdifact\tests\Unit\segments;

use Carbon\Carbon;
use mmerlijn\msgEdifact\Edifact;
use mmerlijn\msgRepo\Msg;
use mmerlijn\msgRepo\Phone;

class DETTest extends \mmerlijn\msgEdifact\tests\TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->edifact = new Edifact("DET:1+21:12:08+09:30'");

    }

    public function test_department_setter()
    {
        $msg = new Msg();
        $edifact = new Edifact();

        $msg->order->dt_of_observation = Carbon::createFromFormat("Y-m-d H:i:s", "2010-10-01 15:15:00");
        $edifact->setMsg($msg);
        $this->assertStringContainsString("DET:1+10:10:01+15:15'", $edifact->write());
    }

    public function test_department_getter()
    {
        $msg = $this->edifact->getMsg(new Msg());
        $array = $msg->toArray();
        $this->assertSame("2021-12-08 09:30", $msg->order->dt_of_observation?->format("Y-m-d H:i"));
    }

    public function test_validator()
    {
        $this->expectException(\Exception::class);
        $this->expectExceptionMessageMatches('/observation_datetime required/');
        $edifact = (new Edifact())->setMsg(new Msg());
        $edifact->write(true);
    }
}